
1.IfThen:
SKIP INSTRUCTION

1.1.IfCondition:
LOAD VARIABLE $a
LOAD VARIABLE $b
INVOKE INTRINSIC less WITH 2 ARGUMENTS
JUMP ON FALSE TO 1.2IfCondition

1.1.1.EvaluateExpression:
LOAD VARIABLE $b
STORE VARIABLE $a

1.1.2.EvaluateExpression:
LOAD VARIABLE $b
LOAD VARIABLE $c
INVOKE INTRINSIC sum WITH 2 ARGUMENTS
STORE VARIABLE $b

1.1.3.ThrowException:
LOAD VARIABLE $exception
STORE VARIABLE $exception
JUMP ON INTERRUPT TO ExceptionClauses
JUMP ON ANY TO 1.EndIf

1.2.IfCondition:
LOAD VARIABLE $a
LOAD LITERAL `0`
INVOKE INTRINSIC more WITH 2 ARGUMENTS
JUMP ON FALSE TO 1.3.ElseClause

1.2.1.EvaluateExpression:
LOAD LITERAL `false`
STORE VARIABLE $result

1.2.2.EvaluateExpression:
LOAD LITERAL `1`
INVOKE INTRINSIC array WITH ARGUMENT
LOAD VARIABLE $b
INVOKE INTRINSIC addItem WITH 2 ARGUMENTS
EXECUTE METHOD fibonacci WITH ARGUMENT
STORE VARIABLE $c

1.2.3.ReturnResult:
LOAD VARIABLE $c
STORE VARIABLE $result
RETURN FROM INTERRUPT
JUMP ON ANY TO 1.EndIf

1.3.ElseClause:
SKIP INSTRUCTION

1.3.1.EvaluateExpression:
LOAD VARIABLE $b
LOAD LITERAL `1`
INVOKE INTRINSIC array WITH ARGUMENT
LOAD LITERAL `$tag`
INVOKE INTRINSIC addItem WITH 2 ARGUMENTS
EXECUTE METHOD find WITH 2 ARGUMENTS
STORE VARIABLE $d

1.3.2.EvaluateExpression:
LOAD LITERAL `(3, 4i)`
STORE VARIABLE $result

1.3.3.ReturnResult:
RETURN FROM INTERRUPT

1.EndIf:
JUMP ON INTERRUPT TO 1.6.FinalClause
JUMP ON ANY TO 1.Done

1.ExceptionClauses:
SKIP INSTRUCTION

1.4.ExceptionClause:
STORE VARIABLE $exception
LOAD LITERAL `1`
INVOKE INTRINSIC table WITH ARGUMENT
LOAD LITERAL `$type`
LOAD LITERAL `$warning`
INVOKE INTRINSIC setValue WITH 3 ARGUMENTS
INVOKE INTRINSIC matches WITH 2 ARGUMENTS
JUMP ON FALSE TO 1.4.ExceptionClauseNoMatch

1.4.1.EvaluateExpression:
LOAD VARIABLE $count
LOAD LITERAL `1`
INVOKE INTRINSIC sum WITH 2 ARGUMENTS
STORE VARIABLE $count

1.4.2.EvaluateExpression:
LOAD LITERAL `2`
INVOKE INTRINSIC table WITH ARGUMENT
LOAD LITERAL `$message`
LOAD LITERAL `"Something not too serious happened."`
INVOKE INTRINSIC setValue WITH 3 ARGUMENTS
LOAD LITERAL `$exception`
LOAD VARIABLE $exception
INVOKE INTRINSIC setValue WITH 3 ARGUMENTS
STORE VARIABLE $result
RETURN FROM INTERRUPT

1.4.ExceptionClauseNoMatch:
LOAD VARIABLE $exception

1.5.ExceptionClause:
STORE VARIABLE $exception
LOAD LITERAL `1`
INVOKE INTRINSIC table WITH ARGUMENT
LOAD LITERAL `$type`
LOAD LITERAL `$moderate`
INVOKE INTRINSIC setValue WITH 3 ARGUMENTS
INVOKE INTRINSIC matches WITH 2 ARGUMENTS
JUMP ON FALSE TO 1.5.ExceptionClauseNoMatch

1.5.1.EvaluateExpression:
LOAD LITERAL `2`
INVOKE INTRINSIC table WITH ARGUMENT
LOAD LITERAL `$message`
LOAD LITERAL `"Something serious happened."`
INVOKE INTRINSIC setValue WITH 3 ARGUMENTS
LOAD LITERAL `$exception`
LOAD VARIABLE $exception
INVOKE INTRINSIC setValue WITH 3 ARGUMENTS
STORE VARIABLE $exception

1.5.2.ThrowException:
LOAD VARIABLE $exception
STORE VARIABLE $exception
JUMP ON INTERRUPT TO ExceptionClauses
RETURN FROM INTERRUPT

1.5.ExceptionClauseNoMatch:
LOAD VARIABLE $exception
JUMP ON INTERRUPT TO 1.6.FinalClause
RETURN FROM INTERRUPT
JUMP ON ANY TO 1.Done

1.6.FinalClause:
SKIP INSTRUCTION

1.6.1.QueueMessage:
LOAD LITERAL `4`
INVOKE INTRINSIC array WITH ARGUMENT
LOAD VARIABLE $foo
INVOKE INTRINSIC addItem WITH 2 ARGUMENTS
LOAD VARIABLE $bar
INVOKE INTRINSIC addItem WITH 2 ARGUMENTS
LOAD VARIABLE $baz
INVOKE INTRINSIC addItem WITH 2 ARGUMENTS
LOAD LITERAL `5`
INVOKE INTRINSIC addItem WITH 2 ARGUMENTS
EXECUTE METHOD wakeUp WITH 2 ARGUMENTS
INVOKE INTRINSIC message WITH 2 ARGUMENTS
LOAD LITERAL `#RSTMWSC0HFY00QJP37QD3JA533NLKPP5`
INVOKE INTRINSIC addItem WITH 2 ARGUMENTS

1.6.2.PublishEvent:
LOAD LITERAL `2`
INVOKE INTRINSIC table WITH ARGUMENT
LOAD LITERAL `$type`
LOAD LITERAL `$confirmation`
INVOKE INTRINSIC setValue WITH 3 ARGUMENTS
LOAD LITERAL `$timestamp`
EXECUTE METHOD now WITH ARGUMENT
INVOKE INTRINSIC setValue WITH 3 ARGUMENTS
INVOKE INTRINSIC queueEvent WITH ARGUMENT
RETURN FROM INTERRUPT

1.Done:
SKIP INSTRUCTION

2.WhileLoop:
LOAD LITERAL `true`
STORE VARIABLE $_continue_2_1_Outer

2.1.Outer:
LOAD VARIABLE $_continue_2_1_Outer
LOAD LITERAL `true`
INVOKE INTRINSIC and WITH 2 ARGUMENTS
JUMP ON FALSE TO 2.EndWhile

2.1.1.EvaluateExpression:
LOAD VARIABLE $bar
STORE VARIABLE $foo

2.1.2.IfThen:
SKIP INSTRUCTION

2.1.2.1.IfCondition:
LOAD VARIABLE $foo
JUMP ON FALSE TO 2.1.2.2.ElseClause

2.1.2.1.1.BreakFrom:
LOAD LITERAL `false`
STORE VARIABLE $_continue_2_1_Outer
JUMP ON ANY TO 2.1.2.EndIf
JUMP ON ANY TO 2.1.2.EndIf

2.1.2.2.ElseClause:
SKIP INSTRUCTION

2.1.2.2.1.WithLoop:
LOAD VARIABLE $sequence
EXECUTE METHOD $createIterator WITH ARGUMENT
STORE VARIABLE $_iterator_21
LOAD LITERAL `true`
STORE VARIABLE $_continue_2_1_2_2_1_1_WithItem

2.1.2.2.1.1.WithItem:
LOAD VARIABLE $_continue_2_1_2_2_1_1_WithItem
LOAD VARIABLE $_iterator_21
EXECUTE METHOD $hasNext WITH ARGUMENT
INVOKE INTRINSIC and WITH 2 ARGUMENTS
JUMP ON FALSE TO 2.1.2.2.1.EndWith
LOAD VARIABLE $_iterator_21
EXECUTE METHOD $getNext WITH ARGUMENT
STORE VARIABLE $item

2.1.2.2.1.1.1.SelectFrom:
LOAD VARIABLE $selection
STORE VARIABLE $_selection_22

2.1.2.2.1.1.1.1.SelectOption:
LOAD VARIABLE $_selection_22
LOAD LITERAL `$first`
INVOKE INTRINSIC matches WITH 2 ARGUMENTS
JUMP ON FALSE TO 2.1.2.2.1.1.1.2SelectOption

2.1.2.2.1.1.1.1.1.EvaluateExpression:
LOAD LITERAL `true`
STORE VARIABLE $result
JUMP ON ANY TO 2.1.2.2.1.1.1.EndSelect

2.1.2.2.1.1.1.2.SelectOption:
LOAD VARIABLE $_selection_22
LOAD LITERAL `$second`
INVOKE INTRINSIC matches WITH 2 ARGUMENTS
JUMP ON FALSE TO 2.1.2.2.1.1.1.3.ElseClause

2.1.2.2.1.1.1.2.1.EvaluateExpression:
LOAD LITERAL `false`
STORE VARIABLE $result
JUMP ON ANY TO 2.1.2.2.1.1.1.EndSelect

2.1.2.2.1.1.1.3.ElseClause:
SKIP INSTRUCTION

2.1.2.2.1.1.1.3.1.ContinueTo:
LOAD LITERAL `false`
STORE VARIABLE $_continue_2_1_2_2_1_1_WithItem
JUMP ON ANY TO 2.1.2.2.1.1.1.EndSelect

2.1.2.2.1.1.1.EndSelect:
JUMP ON INTERRUPT TO 2.1.2.2.1.1.1.4.FinalClause
JUMP ON ANY TO 2.1.2.2.1.1.1.Done

2.1.2.2.1.1.1.4.FinalClause:
SKIP INSTRUCTION

2.1.2.2.1.1.1.4.1.EvaluateExpression:
LOAD LITERAL `$selectDone`
STORE VARIABLE $result
RETURN FROM INTERRUPT

2.1.2.2.1.1.1.Done:
JUMP ON ANY TO 2.1.2.2.1.1.WithItem

2.1.2.2.1.EndWith:
JUMP ON INTERRUPT TO 2.1.2.2.1.2.FinalClause
JUMP ON ANY TO 2.1.2.2.1.Done

2.1.2.2.1.2.FinalClause:
SKIP INSTRUCTION

2.1.2.2.1.2.1.EvaluateExpression:
LOAD LITERAL `$innerDone`
STORE VARIABLE $result
RETURN FROM INTERRUPT

2.1.2.2.1.Done:
SKIP INSTRUCTION

2.1.2.EndIf:
JUMP ON INTERRUPT TO 2.1.2.3.FinalClause
JUMP ON ANY TO 2.1.2.Done

2.1.2.3.FinalClause:
SKIP INSTRUCTION

2.1.2.3.1.EvaluateExpression:
LOAD LITERAL `$ifDone`
STORE VARIABLE $result
RETURN FROM INTERRUPT

2.1.2.Done:
JUMP ON ANY TO 2.1.Outer

2.EndWhile:
JUMP ON INTERRUPT TO 2.2.FinalClause
JUMP ON ANY TO 2.Done

2.2.FinalClause:
SKIP INSTRUCTION

2.2.1.EvaluateExpression:
LOAD LITERAL `$outerDone`
STORE VARIABLE $result
RETURN FROM INTERRUPT

2.Done:
RETURN FROM METHOD

