[
    $components: {
        $variable := 3E23($units: "m/s")
        $variable := ~π($units: $radians)
        $variable := [
            1
            2
            3
        ]($type: /bali/collections/Stack/v1($itemType: /bali/elements/Number/v1($range: [1..∞])))
    }
    $variables: {
        $variable := x
        $variable := foo
        $variable := item5
        $variable := index
        $variable := example
        $variable := verylongvariablename
    }
    $functions: {
        $variable := random(count)
        $variable := random(count)[1]
        $variable := random(16)
        $variable := random(16).sort(increasing)
        $variable := random(16).sort()[-x]
    }
    $groupings: {
        $variable := (x + y) * z
        $variable := ((x + y) * z) - (a or (b and c))
        $variable := ([1, 2] + [2, 3])[1]
        $variable := ([1, 2] + [2, 3]).reverse()
        $variable := ([1, 2] + [2, 3]).reverse(foo, bar)[index]
    }
    $dereferences: {
        $variable := @result
        $variable := @foo.bar()
        $variable := @(foo[x])
    }
    $messages: {
        $variable := foo.bar()
        $variable := foo<-bar(baz)
        $variable := foo.bar(5).random()
        $variable := foo<-bar()[-index]
        $variable := [1, 2, 3].reverse()
        $variable := products[$yoyo, "Duncan"]<-calculateUPC()
    }
    $indices: {
        $variable := values[$symbol]
        $variable := array[-1]
        $variable := x[1, 2, 3][2]
        $variable := [[$a, $b], 2, 3][1, 2]
    }
    $factorials: {
        $variable := 5!
        $variable := big!
        $variable := foo()!
        $variable := base[index]!
        $variable := [1, 2, 3].reverse()!
    }
    $exponentials: {
        $variable := 2 ^ 8
        $variable := e ^ power
        $variable := x ^ y
        $variable := random() ^ exponent
        $variable := base ^ power(x)
    }
    $inversions: {
        $variable := -x
        $variable := *-exponential
        $variable := *complex
        $variable := -*(3, 4i)
    }
    $geometrics: {
        $variable := -x * scaler
        $variable := 6 / dividend
        $variable := -7 // modulo
    }
    $arithmetics: {
        $variable := 7 + 2
        $variable := 5 + addend
        $variable := z - subtractend
    }
    $magnitudes: {
        $variable := |-3|
        $variable := |-y|
        $variable := |foo()|
        $variable := |foo.bar(8)|
    }
    $concatenations: {
        $variable := text & "more text"
        $variable := [1, 2, 3] & list
        $variable := [$a: "a", $b: "b"] & catalog
    }
    $comparisons: {
        $variable := scaler < 8
        $variable := x = y
        $variable := big > 2
        $variable := value is [$foo]
        $variable := component matches any
    }
    $complements: {
        $variable := not true
        $variable := not c
        $variable := not list.isEmpty()
    }
    $logicals: {
        $variable := set and [1, 2, 3]
        $variable := set sans [$a, $b, $c]
        $variable := a or foo.bar()
        $variable := ["one", "two"] xor ["one"]
    }
    $defaults: {
        $variable := optional ? true
        $variable := optional ? default
    }
]
