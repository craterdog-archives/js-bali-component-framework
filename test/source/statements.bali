[
    $empty: {
    }
    $single: {
        $x := value
    }
    $statement: {
        while condition do {
            break loop
        } handle $exception matching [
            $type: "BadException"
        ] with {
            continue loop
        } matching any with {
            break loop
        }
        post message() to /bali/examples/bag/v1
        if false then {
            $component := 0
        } else if component < 5 then {
            $component := 1.2
        } else {
            $component := -Ï€ i
        } handle $exception matching template with {
            publish exception
            throw exception
        }
    }
    $assignValue: {
        $component := value
    }
    $continueLoop: {
        continue loop
    }
    $breakLoop: {
        break loop
    }
    $lifecycle: {
        checkout $component from /bali/examples/document/v1
        save component to citation
        commit component to /bali/examples/document/v2
        checkout components[index] at level 2 from /bali/examples/document/v2
        save components[index] to citation
        commit components[index] to /bali/examples/document/v2.1
        discard citation
    }
    $publishEvent: {
        publish event
    }
    $postMessage: {
        post message() to /bali/examples/bag/v1
        post message(1) to /bali/examples/bag/v1
        post message(1, second, "3rd") to /bali/examples/bag/v1
    }
    $waitForMessage: {
        wait for $message from /bali/examples/bag/v1
        wait for messages[$foo, 5] from /bali/examples/bag/v1
    }
    $acknowledgeMessage: {
        acknowledge citation from /bali/examples/bag/v1
        acknowledge citations[$foo, 5] from /bali/examples/bag/v1
    }
    $returnResult: {
        return
        return result
    }
    $throwException: {
        throw exception
    }
    $ifThen: {
        if condition then {
        }
        if condition then {
        } else {
        }
        if condition then {
        } else if otherCondition then {
        }
        if condition then {
        } else if otherCondition then {
        } else {
        }
    }
    $selectFrom: {
        select expression from a do {
        } b do {
        } c do {
        }
        select expression from a do {
        } b do {
        } c do {
        } else {
        }
    }
    $whileLoop: {
        while condition do {
        }
        while condition do {
        }
    }
    $withLoop: {
        with 1..10 do {
        }
        with 1..10 do {
        }
        with each $item in list do {
        }
        with each $item in list do {
        }
    }
]
