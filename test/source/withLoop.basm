
1.WithStatement:
LOAD LITERAL `$sequence`
STORE VARIABLE $_sequence_1
LOAD VARIABLE $_sequence_1
INVOKE INTRINSIC $getType WITH PARAMETER
STORE VARIABLE $_sequenceType_2
LOAD VARIABLE $_sequenceType_2
LOAD VARIABLE $_sequence_1
EXECUTE MESSAGE $createIterator
STORE VARIABLE $_iterator_3
LOAD VARIABLE $_iterator_3
INVOKE INTRINSIC $getType WITH PARAMETER
STORE VARIABLE $_iteratorType_4
LOAD LITERAL `true`
STORE VARIABLE $_continue_1_1_WithItem

1.1.WithItem:
LOAD VARIABLE $_continue_1_1_WithItem
LOAD VARIABLE $_iteratorType_4
LOAD VARIABLE $_iterator_3
EXECUTE MESSAGE $hasNext
INVOKE INTRINSIC $and WITH 2 PARAMETERS
JUMP ON FALSE TO 1.StatementEnd
LOAD VARIABLE $_iteratorType_4
LOAD VARIABLE $_iterator_3
EXECUTE MESSAGE $getNext
STORE VARIABLE $_item_5

1.1.1.EvaluateStatement:
LOAD LITERAL `true`
STORE VARIABLE $_result_

1.1.2.ContinueStatement:
JUMP ON ANY TO 1.1.4.BlockEnd

1.1.3.EvaluateStatement:
LOAD LITERAL `none`
STORE VARIABLE $_result_

1.1.4.BlockEnd:
JUMP ON ANY TO 1.1.WithItem

1.StatementEnd:
SKIP INSTRUCTION

2.BlockEnd:
RETURN FROM METHOD

