
1.WithLoop:
LOAD LITERAL `$sequence`
STORE VARIABLE $_sequence_1
LOAD VARIABLE $_sequence_1
INVOKE INTRINSIC $getType WITH ARGUMENT
STORE VARIABLE $_sequenceType_2
LOAD VARIABLE $_sequenceType_2
LOAD VARIABLE $_sequence_1
LOAD VARIABLE $_emptyArray_
EXECUTE METHOD $createIterator WITH 3 ARGUMENTS
STORE VARIABLE $_iterator_3
LOAD VARIABLE $_iterator_3
INVOKE INTRINSIC $getType WITH ARGUMENT
STORE VARIABLE $_iteratorType_4
LOAD LITERAL `true`
STORE VARIABLE $_continue_1_1_WithItem

1.1.WithItem:
LOAD VARIABLE $_continue_1_1_WithItem
LOAD VARIABLE $_iteratorType_4
LOAD VARIABLE $_iterator_3
LOAD VARIABLE $_emptyArray_
EXECUTE METHOD $hasNext WITH 3 ARGUMENTS
INVOKE INTRINSIC $and WITH 2 ARGUMENTS
JUMP ON FALSE TO 1.EndWith
LOAD VARIABLE $_iteratorType_4
LOAD VARIABLE $_iterator_3
LOAD VARIABLE $_emptyArray_
EXECUTE METHOD $getNext WITH 3 ARGUMENTS
STORE VARIABLE $symbol

1.1.1.EvaluateExpression:
LOAD LITERAL `true`
STORE VARIABLE $_result_

1.1.2.ContinueTo:
JUMP ON ANY TO 1.EndWith

1.1.3.EvaluateExpression:
LOAD LITERAL `none`
STORE VARIABLE $_result_
JUMP ON ANY TO 1.1.WithItem

1.EndWith:
RETURN FROM METHOD

