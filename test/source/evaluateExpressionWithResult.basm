
1.EvaluateExpression:
LOAD VARIABLE $bar
STORE VARIABLE $foo

2.EvaluateExpression:
LOAD VARIABLE $color
LOAD LITERAL `$violet`
INVOKE INTRINSIC $default WITH 2 ARGUMENTS
STORE VARIABLE $color

3.EvaluateExpression:
LOAD VARIABLE $count
LOAD LITERAL `2`
INVOKE INTRINSIC $sum WITH 2 ARGUMENTS
STORE VARIABLE $count

4.EvaluateExpression:
LOAD VARIABLE $count
LOAD LITERAL `1`
INVOKE INTRINSIC $difference WITH 2 ARGUMENTS
STORE VARIABLE $count

5.EvaluateExpression:
LOAD VARIABLE $double
LOAD LITERAL `2`
INVOKE INTRINSIC $product WITH 2 ARGUMENTS
STORE VARIABLE $double

6.EvaluateExpression:
LOAD VARIABLE $half
LOAD LITERAL `2`
INVOKE INTRINSIC $quotient WITH 2 ARGUMENTS
STORE VARIABLE $half

7.EvaluateExpression:
LOAD VARIABLE $remainder
LOAD LITERAL `13`
INVOKE INTRINSIC $remainder WITH 2 ARGUMENTS
STORE VARIABLE $remainder

8.EvaluateExpression:
LOAD VARIABLE $exponential
LOAD VARIABLE $n
INVOKE INTRINSIC $exponential WITH undefined ARGUMENTS
STORE VARIABLE $exponential

9.EvaluateExpression:
LOAD VARIABLE $and
LOAD LITERAL `'01011101'`
INVOKE INTRINSIC $and WITH 2 ARGUMENTS
STORE VARIABLE $and

10.EvaluateExpression:
LOAD VARIABLE $sans
LOAD LITERAL `'01101001'`
INVOKE INTRINSIC $sans WITH 2 ARGUMENTS
STORE VARIABLE $sans

11.EvaluateExpression:
LOAD VARIABLE $or
LOAD LITERAL `'11110000'`
INVOKE INTRINSIC $or WITH 2 ARGUMENTS
STORE VARIABLE $or

12.EvaluateExpression:
LOAD VARIABLE $xor
LOAD LITERAL `'10010100'`
INVOKE INTRINSIC $xor WITH 2 ARGUMENTS
STORE VARIABLE $xor

